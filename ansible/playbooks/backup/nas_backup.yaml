---
# Had issues with the bash script failing from Semaphore and this provides a cleaner mechanism for integrating with Uptime Kuma and give a nice web dashboard vs something like Cron
- name: SYNC Backups to NAS
  hosts: "{{ hosts }}"
  gather_facts: false
  tasks:

    # - name: Get the executing user's name
    #   ansible.builtin.command: whoami
    #   register: user_name_result

    # - name: Display executing user's name
    #   ansible.builtin.debug:
    #     msg: "Executing user's name: {{ user_name_result.stdout }}"

    - name: Wake NAS
      community.general.wakeonlan:
        mac: '2c:44:fd:1c:61:62'
        broadcast: 10.88.10.255
      delegate_to: localhost

    - name: Wait for NAS to become reachable
      ansible.builtin.wait_for_connection:

    - name: Execute rsync command
      ansible.builtin.raw: |
        rsync -rtEvv --delete --exclude=".*/" /media/ext_storage/backups/ /mnt/nas_replicate_out/vector/backups_sync/
      register: rsync_result
      ignore_errors: yes

    - name: Notify uptime monitoring - success
      ansible.builtin.uri:
        url: "https://uptime-kuma.ournetwork.ca/api/push/XcfEl3F0QF?status=up&msg=OK&ping="
        method: GET
      when: rsync_result.rc == 0

    - name: Notify uptime monitoring - failure
      ansible.builtin.uri:
        url: "https://uptime-kuma.ournetwork.ca/api/push/XcfEl3F0QF?status=down&msg=OK&ping="
        method: GET
      when: rsync_result.rc != 0

    - name: Fail if rsync fails
      ansible.builtin.fail:
        msg: "Rsync failed with return code {{ rsync_result.rc }}."
      when: rsync_result.rc != 0      