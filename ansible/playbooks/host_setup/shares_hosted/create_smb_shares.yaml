---
- name: Setup media directories and Samba
  hosts: all
  gather_facts: no
  become: yes

  vars:
    samba_workgroup: "FILESERVERS"
    media_user: "media"
    media_folders:
      audio:
        path: "/media/ext_storage/audio"
        browsable: yes
        writable: yes
        read_only: no
      photos:
        path: "/media/ext_storage/photos"
        browsable: yes
        writable: yes
        read_only: no
      video:
        path: "/media/ext_storage/video"
        browsable: yes
        writable: yes
        read_only: no

  tasks:
    - name: Install samba package
      apt:
        name: samba
        state: present
        update_cache: yes

    - name: Ensure media directories exist
      file:
        path: "{{ item.value.path }}"
        state: directory
        owner: "{{ media_user }}"
        group: "{{ media_user }}"
        mode: '0755'
      loop: "{{ media_folders | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Backup the original Samba configuration with timestamp
      copy:
        src: /etc/samba/smb.conf
        dest: "/etc/samba/smb.conf.bak_{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"
        remote_src: yes
        backup: yes

    - name: Update Samba workgroup
      lineinfile:
        path: /etc/samba/smb.conf
        regexp: '^workgroup ='
        line: "workgroup = {{ samba_workgroup }}"
        backup: yes

    - name: Add Samba shares to the smb.conf
      blockinfile:
        path: /etc/samba/smb.conf
        insertafter: EOF
        block: |
          {% for item in media_folders %}
          [{{ item.key }}]
          path = {{ item.value.path }}
          valid users = @{{ media_user }}
          browsable = {{ item.value.browsable | bool | lower }}
          writable = {{ item.value.writable | bool | lower }}
          read only = {{ item.value.read_only | bool | lower }}
          
          {% endfor %}
      loop: "{{ media_folders | dict2items }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Restart Samba services
      service:
        name: smbd
        state: restarted
      notify: restart smbd

  handlers:
    - name: restart smbd
      service:
        name: smbd
        state: restarted
